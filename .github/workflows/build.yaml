name: build

on:
  workflow_call:
    inputs:
      runs-on:
        required: true
        type: string
      ext-version:
        required: false
        type: string
        default: latest
      registry:
        required: false
        type: string

jobs:
  build:
    name: build
    runs-on: ${{ inputs.runs-on }}
    timeout-minutes: 60
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Get yarn cache directory path (Windows)
        if: ${{ inputs.runs-on == 'windows-2022' }}
        id: yarn-cache-dir-path-windows
        run: echo "dir=$(yarn cache dir)" >> ${env:GITHUB_OUTPUT}

      - name: Get yarn cache directory path (mac/Linux)
        if: ${{ inputs.runs-on == 'ubuntu-22.04' || inputs.runs-on == 'macos-14' }}
        id: yarn-cache-dir-path-unix
        run: echo "dir=$(yarn cache dir)" >> ${GITHUB_OUTPUT}

      - uses: actions/cache@v4
        if: ${{ inputs.runs-on == 'windows-2022' }}
        id: yarn-cache-windows
        with:
          path: ${{ steps.yarn-cache-dir-path-windows.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - uses: actions/cache@v4
        if: ${{ inputs.runs-on == 'ubuntu-22.04' || inputs.runs-on == 'macos-14' }}
        id: yarn-cache-unix
        with:
          path: ${{ steps.yarn-cache-dir-path-unix.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies (no cache found)
        run: |
          yarn --frozen-lockfile --network-timeout 180000

      - name: Run Build
        timeout-minutes: 20
        run: yarn build

      - name: Login to quay.io
        if: ${{ inputs.registry == 'quay' }}
        run: podman login --username ${{ secrets.QUAY_ROBOT_NAME }} --password ${{ secrets.QUAY_ROBOT_TOKEN }} quay.io

      - name: Login to ghcr.io
        if: ${{ inputs.registry == 'ghrc' }}
        run: podman login --username ${{ github.repository_owner }} --password ${{ secrets.GITHUB_TOKEN }} ghcr.io

      - name: Build and Push Image (Quay)
        if: ${{ inputs.registry == 'quay' }}
        id: build-image
        run: |
          podman build -t quay.io/redhat-developer/podman-desktop-redhat-account-ext:${{ inputs.ext-version }} .
          podman push quay.io/redhat-developer/podman-desktop-redhat-account-ext:${{ inputs.ext-version }}

      - name: Build and Push Image (ghcr)
        if: ${{ inputs.registry == 'hgcr' }}
        id: build-image
        run: |
          podman build -t ghrc.io/redhat-developer/podman-desktop-redhat-account-ext:latest .
          podman push ghrc.io/redhat-developer/podman-desktop-redhat-account-ext:latest
